 <div>
             <h1>MoodVices</h1>
            <Button  colorPalette="teal" variant="surface" onClick={handleClick}>Add MoodVice</Button>   
            {moodVices.map(moodVice => ( */
                        <Box  
                        key={moodVice.moodViceId}>
                            {loggedIn !== null ? 
                            <>
                            
                               <Text>{moodVice.title}</Text>
                               <HStack gap="1"> 
                                <Text>{moodVice.body}</Text>
                                <Text>{formatDate(moodVice.created_at)}</Text>
                                </HStack>
                                {moodVice.userId === loggedIn.userId ?
                                <><Button type="button" className="btn btn-outline-primary" onClick={ () => navigate(`/edit/${moodVice.moodViceId}`)}>
                                    Edit
                                    </Button>   
                                    <Button type="button" className="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                                        Delete
                                    </Button>
                                    <div className="modal fade" id="exampleModal" tabIndex="-1" aria-labelledby="exampleModalLabel">
                                        <div className="modal-dialog">
                                            <div className="modal-content">
                                                <div className="modal-header">
                                                    <h1 className="modal-title fs-5" id="exampleModalLabel">Are you sure you want to delete this MoodVice?</h1>
                                                    <Button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close"></Button>
                                                </div>
                                                <div className="modal-body">
                                                    <p>Title: {moodVice.title}</p>
                                                    <p>Body: {moodVice.body}</p>
                                                    <p>User Id:{moodVice.userId}</p>
                                                    <p>Date Created:{formatDate(moodVice.created_at)}</p>
                                                </div>
                                                <div className="modal-footer">
                                                    <Button type="Button" className="btn btn-secondary" data-bs-dismiss="modal">Cancel</Button>
                                                    <Button type="Button" className="btn btn-primary" data-bs-dismiss="modal"
                                                    onClick={(evt) => {
                                                        fetch(`http://localhost:8080/api/moodVice/${moodVice.moodViceId}`,{
                                                            method: "DELETE",
                                                            headers:{
                                                                Authorization:loggedIn.userId
                                                            }
                                                        })
                                                        .then(_=> evt.preventDefault(),
                                                        navigate("/moodVice")
                                                    )
                                                    }}
                                                    >Delete</Button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>  
                                </> : <>
                                    <Text>{moodVice.title}</Text>
                                    <Text>{moodVice.body}</Text>
                                    <Text>{formatDate(moodVice.created_at)}</Text>
                                    
                                    <ReplyList moodViceId={moodVice.moodViceId} loggedIn={loggedIn}/>
                                </>}
                            </> :    
                            <>{moodVice.title}</>
                            }
                            
                        </Box>
                    ))}
        </div> 

                <Stack gap="4" direction="row" wrap="wrap">
            <For each={moodVices}>
                {(moodVice) => (
        <Card.Root width="320px" key={moodVice.moodViceId}>
                <Card.Body gap ="2">
                    <Card.Title>{moodVice.title}</Card.Title>
                    <Card.Description>{moodVice.body}</Card.Description>
                    <Card.Text>{formatDate(moodVice.created_at)}</Card.Text>
                </Card.Body>
                <Card.Footer>
                    <HStack>
                        <Button colorScheme="blue" onClick={handleClick}>Reply</Button>
                        <Button colorScheme="blue" onClick={handleClick}>Edit</Button>
                        <Button colorScheme="red" onClick={handleClick}>Delete</Button>
                    </HStack>
                    <ReplyList moodVice={moodVice} loggedIn={loggedIn}/>
                </Card.Footer>
                </Card.Root>
                )}
            </For>
        </Stack>
   <div class="my-3 p-3 bg-body rounded shadow-sm">
    <h6 class="border-bottom pb-2 mb-0">Suggestions</h6>
    <div class="d-flex text-body-secondary pt-3">
      <svg class="bd-placeholder-img flex-shrink-0 me-2 rounded" width="32" height="32" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 32x32" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#007bff"></rect><text x="50%" y="50%" fill="#007bff" dy=".3em">32x32</text></svg>
      <div class="pb-3 mb-0 small lh-sm border-bottom w-100">
        <div class="d-flex justify-content-between">
          <strong class="text-gray-dark">Full Name</strong>
          <a href="#">Follow</a>
        </div>
        <span class="d-block">@username</span>
      </div>
    </div>
    <div class="d-flex text-body-secondary pt-3">
      <svg class="bd-placeholder-img flex-shrink-0 me-2 rounded" width="32" height="32" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 32x32" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#007bff"></rect><text x="50%" y="50%" fill="#007bff" dy=".3em">32x32</text></svg>
      <div class="pb-3 mb-0 small lh-sm border-bottom w-100">
        <div class="d-flex justify-content-between">
          <strong class="text-gray-dark">Full Name</strong>
          <a href="#">Follow</a>
        </div>
        <span class="d-block">@username</span>
      </div>
    </div>
    <div class="d-flex text-body-secondary pt-3">
      <svg class="bd-placeholder-img flex-shrink-0 me-2 rounded" width="32" height="32" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 32x32" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#007bff"></rect><text x="50%" y="50%" fill="#007bff" dy=".3em">32x32</text></svg>
      <div class="pb-3 mb-0 small lh-sm border-bottom w-100">
        <div class="d-flex justify-content-between">
          <strong class="text-gray-dark">Full Name</strong>
          <a href="#">Follow</a>
        </div>
        <span class="d-block">@username</span>
      </div>
    </div>
    <small class="d-block text-end mt-3">
      <a href="#">All suggestions</a>
    </small>
  </div>

  <div class="d-flex align-items-center p-3 my-3 text-white bg-purple rounded shadow-sm">
    <img class="me-3" src="/docs/5.3/assets/brand/bootstrap-logo-white.svg" alt="" width="48" height="38">
    <div class="lh-1">
      <h1 class="h6 mb-0 text-white lh-1">Bootstrap</h1>
      <small>Since 2011</small>
    </div>
  </div>

  <nav class="navbar navbar-expand-lg fixed-top navbar-dark bg-dark" aria-label="Main navigation">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">Offcanvas navbar</a>
    <button class="navbar-toggler p-0 border-0" type="button" id="navbarSideCollapse" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="navbar-collapse offcanvas-collapse" id="navbarsExampleDefault">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="#">Dashboard</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Notifications</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Profile</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Switch account</a>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" data-bs-toggle="dropdown" aria-expanded="false">Settings</a>
          <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="#">Action</a></li>
            <li><a class="dropdown-item" href="#">Another action</a></li>
            <li><a class="dropdown-item" href="#">Something else here</a></li>
          </ul>
        </li>
      </ul>
      <form class="d-flex" role="search">
        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline-success" type="submit">Search</button>
      </form>
    </div>
  </div>
</nav>